---
page_title: "Resource: octopusdeploy_kubernetes_monitor"
description: |-
  Manages a Kubernetes Monitor in Octopus Deploy.
---

# Resource: octopusdeploy_kubernetes_monitor

Manages a Kubernetes monitor in Octopus Deploy. The Kubernetes monitor provides observability capabilities for Kubernetes deployments.

~> **Note** This resource requires Octopus Server 2025.3 or later.

~> **Important** The `machine_id` must reference a Kubernetes Agent deployment target. Regular deployment targets or workers are not supported.

## Example Usage

### Basic Kubernetes Monitor with Kubernetes Agent

This example shows how to set up a Kubernetes monitor along with the Kubernetes Agent using Helm:

```hcl
locals {
  octopus_api_key         = "API-XXXXXXXXXXXXXXXX"
  octopus_address         = "https://myinstance.octopus.app"
  octopus_grpc_address    = "grpc://myinstance.octopus.app:8443"
  octopus_polling_address = "https://polling.myinstance.octopus.app/"
}

data "octopusdeploy_teams" "everyone" {
  partial_name = "Everyone"
  skip         = 0
  take         = 1
}

resource "octopusdeploy_space" "monitoring" {
  name                 = "Kubernetes Monitoring"
  description          = "Space for Kubernetes observability"
  space_managers_teams = [data.octopusdeploy_teams.everyone.teams[0].id]
}

resource "octopusdeploy_environment" "example" {
  name        = "Example"
  description = "Example Kubernetes clusters"
  space_id    = octopusdeploy_space.monitoring.id
}

resource "octopusdeploy_polling_subscription_id" "agent_subscription_id" {}
resource "octopusdeploy_tentacle_certificate" "agent_cert" {}

# Create the Kubernetes agent deployment target
resource "octopusdeploy_kubernetes_agent_deployment_target" "example" {
  name         = "Example Kubernetes Cluster"
  space_id     = octopusdeploy_space.monitoring.id
  environments = [octopusdeploy_environment.example.id]
  roles        = ["k8s-example", "monitoring-enabled"]

  thumbprint = octopusdeploy_tentacle_certificate.agent_cert.thumbprint
  uri        = octopusdeploy_polling_subscription_id.agent_subscription_id.polling_uri

  default_namespace = "octopus-system"
}

# Generate a unique installation ID for the monitor
resource "random_uuid" "monitor_installation" {}

# Create the Kubernetes monitor
resource "octopusdeploy_kubernetes_monitor" "example" {
  space_id        = octopusdeploy_space.monitoring.id
  installation_id = random_uuid.monitor_installation.result
  machine_id      = octopusdeploy_kubernetes_agent_deployment_target.example.id
}

# Install the Kubernetes agent and monitor via Helm
resource "helm_release" "kubernetes_agent1" {
  name             = "octopus-agent-release"
  repository       = "oci://registry-1.docker.io"
  chart            = "octopusdeploy/kubernetes-agent"
  version          = "2.*.*"
  atomic           = true
  create_namespace = true
  namespace        = "octopus-agent-target1"

  set {
    name  = "agent.acceptEula"
    value = "Y"
  }

  set {
    name  = "agent.name"
    value = octopusdeploy_kubernetes_agent_deployment_target.example.name
  }

  set_sensitive {
    name  = "agent.serverApiKey"
    value = local.octopus_api_key
  }

  set {
    name  = "agent.serverUrl"
    value = local.octopus_address
  }

  set {
    name  = "agent.serverCommsAddress"
    value = local.octopus_polling_address
  }

  set {
    name  = "agent.serverSubscriptionId"
    value = octopusdeploy_polling_subscription_id.agent_subscription_id.polling_uri
  }

  set_sensitive {
    name  = "agent.certificate"
    value = octopusdeploy_tentacle_certificate.agent_cert.base64
  }

  set {
    name  = "agent.space"
    value = octopusdeploy_space.monitoring.name
  }

  set {
    name  = "agent.deploymentTarget.enabled"
    value = "true"
  }

  set_list {
    name  = "agent.deploymentTarget.initial.environments"
    value = octopusdeploy_kubernetes_agent_deployment_target.example.environments
  }

  set_list {
    name  = "agent.deploymentTarget.initial.tags"
    value = octopusdeploy_kubernetes_agent_deployment_target.example.roles
  }

  set {
    name  = "agent.targetName"
    value = octopusdeploy_kubernetes_agent_deployment_target.example.name
  }

  set {
    name  = "kubernetesMonitor.enabled"
    value = "true"
  }

  set {
    name  = "kubernetesMonitor.registration.register"
    value = "false"
  }

  set {
    name  = "kubernetesMonitor.monitor.serverGrpcUrl"
    value = local.octopus_grpc_address
  }

  set_sensitive {
    name  = "kubernetesMonitor.monitor.authenticationToken"
    value = octopusdeploy_kubernetes_monitor.example.authentication_token
  }

  set {
    name  = "kubernetesMonitor.monitor.installationId"
    value = octopusdeploy_kubernetes_monitor.example.installation_id
  }
}
```
{{ .SchemaMarkdown | trimspace }}